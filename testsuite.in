START_MARKER

test_compile([[ Public.Standards.CSV.String foo=Public.Standards.CSV.String("") ]])
test_any_equal([[ return Public.Standards.CSV.String("")->read_row() ]], ({ "" }))
test_compile([[ Public.Standards.CSV.String foo=Public.Standards.CSV.String(",") ]])
test_any_equal([[ return Public.Standards.CSV.String(",")->read_row() ]], ({ "","" }))
test_compile([[ Public.Standards.CSV.String foo=Public.Standards.CSV.String("foo,bar") ]])
test_any_equal([[ return Public.Standards.CSV.String("foo,bar")->read_row() ]], ({ "foo","bar" }))
test_compile([[ Public.Standards.CSV.String foo=Public.Standards.CSV.String("foo,bar,") ]])
test_any_equal([[ return Public.Standards.CSV.String("foo,bar,")->read_row() ]], ({ "foo","bar","" }))

test_compile([[ Public.Standards.CSV.FILE foo=Public.Standards.CSV.FILE("data/simple.csv") ]])
test_compile([[ Public.Standards.CSV.FILE foo=Public.Standards.CSV.FILE("data/simple_dos.csv") ]])
test_compile([[ Public.Standards.CSV.FILE foo=Public.Standards.CSV.FILE("data/sample.csv") ]])

END_MARKER